name: "Update docs"
description: "Generate markdown documentation, commit it to a branch of the gitbook repo, and push it"
inputs:
  gitbook-branch:
    description: "Which branch of wandb/gitbook to update"
    required: true
    default: "en"
  core-branch:
    description: "Which branch of wandb/core to use as the source for the docs"
    required: true
    default: master
  client-branch:
    description: "Which branch of wandb/client to use as the source for the docs"
    required: true
    default: latest
  access-token:
    description: "Personal access token to use when checking out repos"
    required: true
runs:
  using: "composite"
  steps:
    - name: checkout gitbook repo
      uses: actions/checkout@v2
      with:
        repository: wandb/gitbook
        path: repos/gitbook
        ref: ${{ inputs.gitbook-branch }}
        token: ${{ inputs.access-token }}
    # setup: bring in python plus the requirements for generating docs and the new release
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: setup python environment, including wandb client
      shell: bash
      env:
        VERSION: ${{ inputs.client-branch }}
      run: python -m pip install -r ${{ github.action_path }}/requirements.txt git+https://github.com/wandb/client.git@$VERSION

    - name: checkout gitbook repo
      uses: actions/checkout@v2
      with:
        repository: wandb/core
        path: repos/core
        ref: ${{ inputs.core-branch }}
        token: ${{ inputs.access-token }}

    - uses: actions/setup-node@v2
      with:
        node-version: 16
        cache: yarn
        cache-dependency-path: repos/core/lib/js/cg/yarn.lock

    - name: generate Weave Op docs
      shell: bash
      run: |
        yarn --cwd=repos/core/lib/js/cg --frozen-lockfile
        yarn --cwd=repos/core/lib/js/cg generate-docs
        mkdir -p repos/gitbook/ref
        cp -r repos/core/lib/js/cg/docs-gen/ref/* repos/gitbook/ref

    # generate the docs from the client library and overwrite gitbook contents
    - name: generate client documentation
      shell: bash
      env:
        VERSION: ${{ inputs.client-branch }}
        DOCUGEN_CONFIG_PATH: ${{ github.action_path }}/config.ini
      run: python ${{ github.action_path }}/generate.py --template_file ./repos/gitbook/SUMMARY.md --commit_id $VERSION --output_dir ./repos/gitbook
    # for debugging/tracking, display the generated table of contents
    - name: display ToC
      shell: bash
      run: cat ./repos/gitbook/SUMMARY.md

    # stage: commit the changes
    - name: commit changes
      shell: bash
      working-directory: ./repos/gitbook
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A .
        git commit -m "update reference docs to cli@${{ inputs.client-branch }}, core@${{ inputs.core-branch }}"

    # deploy: push to the gitbook repository
    - name: push
      shell: bash
      working-directory: ./repos/gitbook
      run: |
        git remote set-url origin https://${{ inputs.access-token }}@github.com/wandb/gitbook.git
        git push
