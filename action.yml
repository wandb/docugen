name: "Update docs"
description: "Generate markdown documentation, commit it to a branch of the docodile repo, and push it"
inputs:
  docodile-branch:
    description: "Which branch of wandb/docodile to update"
    required: true
  core-branch:
    description: "Which branch of wandb/core to use as the source for the docs"
    required: true
    default: master
  wandb-branch:
    description: "Which branch of wandb/wandb to use as the source for the docs"
    required: true
    default: latest
  access-token:
    description: "Personal access token to use when checking out repos"
    required: true
runs:
  using: "composite"
  steps:
    - name: checkout docodile repo
      uses: actions/checkout@v2
      with:
        repository: wandb/docodile
        path: repos/docodile
        ref: ${{ inputs.docodile-branch }}
        token: ${{ inputs.access-token }}
    # setup: bring in python plus the requirements for generating docs and the new release
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: setup python environment, including wandb sdk
      shell: bash
      env:
        VERSION: latest
      run: python -m pip install -r ${{ github.action_path }}/requirements.txt git+https://github.com/wandb/wandb.git@$VERSION

    - name: checkout wandb/core
      uses: actions/checkout@v2
      with:
        repository: wandb/core
        path: repos/core
        ref: ${{ inputs.core-branch }}
        token: ${{ inputs.access-token }}

    - name: setup node
      uses: actions/setup-node@v2
      with:
        node-version: "16"
        cache: "yarn"
        cache-dependency-path: repos/core/lib/js/cg/yarn.lock

    - name: generate weave documentation
      shell: bash
      run: |
        yarn --cwd=./repos/core/lib/js/cg --frozen-lockfile
        yarn --cwd=./repos/core/lib/js/cg generate-docs
        rm -rf ./repos/docodile/docs/ref/weave/**
        mkdir -p ./repos/docodile/docs/ref/weave
        cp -r ./repos/core/lib/js/cg/docs_gen/* ./repos/docodile/docs/ref/weave

    # generate the docs from the latest sdk library and overwrite docodile contents
    - name: generate SDK documentation
      shell: bash
      env:
        VERSION: latest
        DOCUGEN_CONFIG_PATH: ${{ github.action_path }}/config.ini
      run: python ${{ github.action_path }}/generate.py  --commit_id $VERSION --output_dir ./repos/docodile/docs/

    # stage: commit the changes
    - name: commit changes
      shell: bash
      working-directory: ./repos/docodile
      run: |
        # hardcoded to the user ID representing the github actions bot, see:
        # https://github.community/t/github-actions-bot-email-address/17204/6
        # https://api.github.com/users/github-actions%5Bbot%5D
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"x
        if [[ `git status --porcelain` ]]; then
          git checkout -b sdk_release ; \
          git add -A .
          git commit -m "Update reference docs to cli@${{ inputs.wandb-branch }}, core@${{ inputs.core-branch }} using https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
          git remote set-url origin https://${{ inputs.access-token }}@github.com/wandb/docodile.git ; \
          git branch --set-upstream-to=origin/main sdk_release ;\
          git pull origin main; \
          git push origin sdk_release; \
        else
          echo "Documentation has not changed; skipping commit/push" ;
        fi
